<?xml version="1.0" encoding="utf-8"?>

<prompt_library>
    <text data="Loss Ratio" type="text">
        Role: Data Input Officer
        Desired Output: a markdown output of the pdf. After that, based on the markdown output, we need to convert it into an .csv format for copy and paste.

        [1st col: policy_id]: Contract Number + "_" + year &amp; month of the starting period.
        [2nd col: policy_number]: Contract Number 
        [3rd col: client_name]: Customer Name
        [4th col: policy_start_date]: the start date of period 
        [5th col: policy_end_date]: one year after the start date of period
        [6th col: duration]: The month between period. If you cannot find that, you can use "Annualised to:". Please make sure that the period may not the same as the policy start date to policy end date. For example, the report is stated as "10/07/2024 to 09/03/2025". The period is 6 months, and the policy start date is 10/07/2024 and policy end date is 09/07/2025.
        [7th col: ibnr]: IBNR, this has to be a percentage. If the report does not state the IBNR, please input "Not State" default.
        [8th col: data_as_of]Data as of
        [9th col: benefit_type] Benefit (Clinical, Dental, Hospital ...., Grand Total etc.)
        [10th col: actual_premium] Actual Subscription
        [11th col: actual_paid_w_ibnr] Actual Claims with IBNR
        [12th col: loss_ratio] Actual Loss Ratio

        The order of this table should be re-arranged by the benefit type. The order is [Hospital, Clinical, Dental, Optical, Maternity, Top-Up/ SMM, Total] (If any one of these benefit type ais not presented in the report, skip the item).
        *Warm reminder when converting*
        1. Some terms are interchangable among different insurers. Below is the reference for you.
        Premium: Subscription
        Customer Name: Client Name/ Policy Holder
        Loss Ratio: Claim Ratio
        Hospital: Hospitalisation/ Inpatient/ Hospital &amp; Surgical
        Clinical: Outpatient
        Actual Premium: Pro-Rata Premium
        2. If the report states "Annualized XXX", ie Annualized Premium, please make sure to convert back to the actual by mulitplying the duration and then divided by 12 months to revert the annualization effect.
        3. The Duration may not be stated by the insurers. Therefore, you shall look into any data period, for example 10/07/2024 to 09/03/2025 where its policy period is 10/07/2024 to 09/07/2025, and then calculate the duration by the number of months between the two dates. In this example, it is 8 months.
        4. Sometimes, there are more than 1 loss ratio reports in the pdf. Please export then all into one markdown table and csv. The order of the table should be first the policy number, then the benefit type.
        5. Date format, if it is in "XX/XX/XXXX" format, it DD/MM/YYYY or D/M/YYYY.
        6. For the value contains ",", especially in the "benefit" and "client_name" columns, please replace it with space " " to avoid the csv format error.
    </text>

    <text data="AIA 105 Overall Usage" type="text">
        Desired Output: a markdown output of the pdf. After that, based on the markdown output, we need to convert it into an .csv format text for copy and paste.

        [1st col: policy_id]: Policy Number Number + "_" + year &amp; month of the starting period.
        [2nd col: policy_number]: Policy Number
        [3rd col: insurer]: Insurer, which is AIA
        [4th col: client_name]: Customer Name
        [5th col: policy_start_date]: the start date of period
        [6th col: policy_end_date]: one year after the start date of period
        [7th col: duration_days]: The number of days between date period.
            - Please note that the date period may not be the same as the policy start date to policy end date. For example, the report is stated the Date Range as "Jul 1 2024 to Dec 31 2024". The period is 6 months, and the policy start date is 01/07/2024 and policy end date is 30/06/2025.
        [8th col: class]: The class or the Benefit Plan
        [9th col: benefit_type] Benefit Type (Clinical, Dental, Hospital ...., Grand Total etc.)
        [10th col: benefit]: Benefit (Room and Board, General Physician Services, etc.)
        [11th col: panel]: Panel Type (panel/ non-panel)
        [12th col: no_of_claims]: No. of Claims
        [13th col: no_of_claimants]: No. of Claimants
        [14th col: incurred_amount]: Presented Amount (HK$)
        [15th col: paid_amount]: Adjusted Amount (HK$)

        Task:
        1. Read the pdf carefully and extract the content in the pdf by using markdown format.
            (a) Inside the pdf, you will see 2 section, General Information, Data Table.
            (b) General information consists of Title, Report ID, Policy, Date Range. Usually this section is at the top of the pdf.
            (c) Data Table are table contains the claim data of each classes, which the claim data are grouped by benefit plan and the panel type (affiliate-network/ network/ non-network). It column headers are:
                [1st column]: Benefit Plan, Panel Type, Benefit and Benefit Type. These 4 data are all stacked in one columns with border lines and indentations to indicates. Please explanation subsequent
                [2nd column]: No. Of Claims
                [3rd column]: Presented Amt (HK$)
                [4th column]: Avg Presented Amt (HK$)
                [5th column]: Adjusted Amt (HK$)
                [6th column]: Avg Adjusted Amt. (HK$)
                [7th column]: Reimbursement (%)
            (d) Inside 1st column, which is the most left column in the data table, you will see the Benefit Plan, Panel, Benefit Type, and Benefit.
                i. Benefit Plan is the first row of the table, Usually it is with the format [Benefit Plan: XXXX], where XXXX is the name of the benefit plan, e.g. "001 GENERAL STAFF".
                ii. Panel Type is the most left aligned row with underline, which is the type of panel, e.g. "Affiliate Network", "Network", "Non-Network". It indicates that the subsequent benefits and benefit types are all under this panel type. (Sometimes one page will contains more than 1 panel type)
                iii. Benefit Type is the first level indentation rows, which is the type of benefit, e.g. "Hospitalization and Surgical Benefits", "Supplementary Major Medical", "Outpatient Benefits", "Total" etc. It indicates that the subsequent benefits (second level indentation rows, please see next point) are all under this benefit type.
		            - If the benefit type is "Hospitalization and Surgical Benefits", "Supplementary Major Medical", "Dental", the benefit type is equal to the benefit. 
		            - If the benefit type is "Outpatient Benefits", read the benefit in the second level indentation rows, e.g. "General Physician Services", etc.
                    - If the benefit type is "Supplementary Major Medical", it means that there are no "Presented Amt (HK$)", "Avg Presented Amt (HK$)", data in the table, and you should leave those columns empty, extract data from "Adjusted Amt (HK$)" and fill in column "Adjusted Amount (HK$)"
                    - If the benefit type is "Total" or "Claimed Total", it is the summary numbers of the previous session.
	        (e) Leave "no_of_claimants" column empty
        2. Based on the extracted markdown table output, convert to .csv format text
            a. Keep the same format as the markdown table output 
            b. Keep all the rows extracted from the markdown table
            c. For the value contains ",", especially in the "benefit" and "client_name" columns, please replace it with space " " to avoid the csv format error.
    </text>

    <text data="AIA 101 Hosp Usage" type="text">
        Role: Data Input Officer  

        PDF Page setting:In each page, you will see 2 section, General Information, Data Table.
        General information consists of Title, Report ID, Policy, Date Range.
        Data Table are table contains the claim data of each classes, which the claim data are grouped by benefit plan. It column headers are:
        [1st column]: Benefit Type 
        [2nd column]: No. Of services 
        [3rd column]: Presented Amt (HK$) 
        [4th column]: Avg Presented Amt (HK$) 
        [5th column]: Adjusted Amt (HK$) 
        [6th column]: Avg Adjusted Amt. (HK$) 
        [7th column]: Reimbursement (%) 
        
        Task:  
        1. Read the table in the pdf:  
            a. The pdf id a multi-page table file grouped by ["benefit plan", "panel"] 
            b. Identify the panel in the first row of each table: "panel" = non-network, network or affiliate network  
            c. Section handling: for all sub-headers with the same indentation parer to prefix e.g. "Hospital Services - Minor", "Hospital Services - Intermediate" input example as follows:  
                Anesthetist Fee  
                    Minor
        2. Based on the description of the pdf, generate a master markdown table output: 
            a. col = ["benefit", "no. of claims", "presented amt", "avg presented amt", "adjusted amt", "avg adjsuted amt", "reimbursement"] 
            b. For all supplementary major medical row, leave ["Presented Amt (HK$)", "Avg Presented Amt (HK$)", "Adjusted Amt (HK$)",  "Avg Adjusted Amt. (HK$)"] columns empty 
        3. Then based on the master markdown table generate csv text output:  
            a. col_setup = [ 'policy_id', 'policy_number', 'insurer', 'client_name', 'policy_start_date', 'policy_end_date', 'duration_days', 'class', 'benefit_type", 'benefit', 'panel', 'no_of_claims', 'no_of_claimants', 'incurred_amount', 'paid_amount', ]  
            b. The policy_number is the number in the general information section right next to "Policy:", and the client_name is the policy holder in the general information section.
            c. "policy_id" = "policy_number" + "_" +  'policy_start_date'.format("%Y%m"). "Insurer" = AIA 
            d. Leave "no. of claimants" empty 
            e. Set "benefit_type" column = "Hospital"  
            f. no_of_claims = "No. Of services", Incurred amount = "Presented Amt (HK$)" and paid amount = "Adjusted Amt (HK$)". 
            g. "policy_start_date' = first date of Date Range and "policy_end_date" = second date of Date Range in the general information section
            h. "duration_days" = the number of days between policy_start_date and policy_end_date
            i. set "policy_end_date" = "policy_start_date" + 365 days (don't change the duration_days)
            j. Drop the section in which the section header contains "Summary" 
            k. Format the class column as title-case the existing names (e.g. 001 President, 002 Office Staff-Director Or Above, etc.)
            l. Make sure the date format is in "YYYY-MM-DD" format.
            m. For the value contains ",", especially in the "benefit" and "client_name" columns, please replace it with space " " to avoid the csv format error.

        Desired output: generate 1 csv text with all plans included.
        Check the csv text to make sure that all the columns are correctly formatted and aligned. If the number of columns of each row are not the same, please adjust the padding, or reassess the value if they are placed at the right position.
    </text>

    <text data="AIA 102 Clin Usage" type="text">
        Role: Data Input Officer  

        Task: 
        1. A markdown output of the pdf: col = ["benefit", "no. of claims", "presented amt", "avg presented amt", "adjusted amt", "avg adjsuted amt", "reimbursement"] 
        2. Based on this output markdown, for all supplementary major medical row, shift the value in presented amt and avg presented amt to the right for 2 cell 
        3. Generate a csv text based on the markdown output with the following columns: col_setup = [ 'policy_id', 'policy_number', 'insurer', 'client_name', 'policy_start_date', 'policy_end_date', 'duration_days', 'class', 'benefit_type", 'benefit', 'panel', 'no_of_claims', 'no_of_claimants', 'incurred_amount', 'paid_amount', ]  
        4. The policy_number is the number in the general information section right next to "Policy:", and the client_name is the policy holder in the general information section.
        5. "policy_id" = "policy_number" + "_" +  'policy_start_date'.format("%Y%m"). "Insurer" = AIA 
        6. For insurer, please set it to AIA and leave no of claimants as empty. no_of_claims = no. of claims, Incurred amount = presented amt and paid amount = adjusted amt. 
        7. Drop the section in which the section header contains "Summary" 
        8. Do not include date range in the client name column 
        9. Set "benefit_type" column = "Clinic"  
        10. Panel = non-network, network, or affiliate network 
        11. Format the class column as title-case the existing names (e.g. 001 President, 002 Office Staff-Director Or Above, etc.)
        12. Make sure the date format is in "YYYY-MM-DD" format.
        13. For the value contains ",", especially in the "benefit" and "client_name" columns, please replace it with space " " to avoid the csv format error.

        Desired output: generate 1 csv text with all plans included named policy_num-client_name
        Check the csv text to make sure that all the columns are correctly formatted and aligned. If the number of columns of each row are not the same, please adjust the padding, or reassess the value if they are placed at the right position.
    </text>

    <text data="Bupa Shortfall Non-healthnet" type="text">
        Role: Data Input Officer  

        Desired output: a csv format text output which combines all the data tables in the pdf into a single master table.
        PDF Page setting: In each page, you will see 2 section, General Information, Data Table (2 blocks: non-healthnet and overall).General information consists of Report name, Customer Name, Contract Number, Period (data period), and data as of. 
        Data Table are table contains the claim data of each classes. It column headers are:
        [1st column]: Benefit Type 
        [2nd column]: Class 
        [3rd column]: Benefit, which is the benefit code 
        [4th column]: Benefit Description, the name of the benefit 
        [5th column]: Number of claims 
        [6th column]: Number of claimants 
        [7th column]: Presented 
        [8th column]: Adjusted  
        [9th column]: Usage Ratio 
        [10th column]: Number of claims  
        [11th column]: Number of claimants 
        [12th column]: Presented  
        [13th column]: Adjusted  
        [14th column]: Usage Ratio 

        Task:  
        1. Read the table in the pdf 
            a. The pdf is a multi-page table file grouped by ["benefit type", "class"]  
            b. ["Benefit"] = int and ["Benefit description"] = text  
            c. At the end of each (["benefit type", "class"] ) item, there is a Total row, for total row: 
                i. Leave ["Benefit Type","Benefit", "Benefit Description", "Number of claimants"] empty 
                ii. ["Class"] = f"{class}Total" 
            d. At the end of each benefit type section, there is a total row: 
                i. ["Benefit Type"] = f"{benefit type}Total"  
                ii. Leave ["Class", "Benefit", "Benefit Description", "Number of claimants", "Usage ratio"] empty  
            e. At the end of the table (ie. The last page), there is a grand total row: 
                i. ["Benefit Type"] = Grand Total   
                ii. Leave ["Class", "Benefit", "Benefit Description", "Number of claimants", "Usage ratio"] empty  
        2. Based on the description of the pdf, generate a markdown table output of the table: 
            a. table_headers = ["Benefit Type", "Class", "Benefit", "Benefit Description", "Number of Claim Lines", "Number of Claimants", "Presented",  "Adjusted", "Usage Ratio", "Number of Claim Lines", "Number of Claimants", "Presented",  "Adjusted", "Usage Ratio"] 
            b. For newline-separated values within cells, iterate over each line within those cells to generate individual rows 
        3. Then based on the master table markdown output, generate a csv format text output: 
            a. A1 = "Shortfall Analysis with Non-Healthnet" 
            b. A3 = "Customer Name: " B3= Customer name 
            c. A4 = "Contract Number:" B4 =Contract number  
            d. A5 = "Period:"      B5=start date  C5 =end date 
            e. A6 = "# data as of: " B6 = date as of 
            f. A7 = "# Confidential" 
            g. Skip 2 rows  
            h. A10: write the shortfall analysis using the markdown table output generated above, header included table_headers = ["Benefit Type", "Class", "Benefit", "Benefit Description", "Number of Claim Lines", "Number of Claimants", "Presented",  "Adjusted", "Usage Ratio", "Number of Claim Lines", "Number of Claimants", "Presented",  "Adjusted", "Usage Ratio"] 
            i. based on the number of columns starting from A10, refill the spacing by adding "," into the general information in Row 1 to Row 9 such that the csv is readable.
                - For example, A1 = "Shortfall Analysis with Non-Healthnet", then Row 1 has to add 13 commas to the end of the row if the Data Table consists of 14 columns, so that that particular row and the csv consists of 14 columns is readable.
                - "," padding in any empty cell in the row, so that the csv is readable. (For example, for SMM, there can be no data in Presented Amount, therefore, add "," padding in the Presented Amount column)
                - Row 2, 8, 9 add "," padding until there are 14 columns in the row

        4. Check the csv text to make sure that all the columns are correctly formatted and aligned. If the number of columns of each row are not the same, please adjust the padding, or reassess the value if they are placed at the right position.
        
    </text>

    <text data="Bupa Shortfall Class" type="text">
        Role: Data Input Officer  

        Desired output: markdown table output which combines all the data tables in the pdf into a single master table.
        PDF Page setting:In each page, you will see 2 section, General Information and Data Table.
        General information consists of Report name, Customer Name, Contract Number, Period (data period), and data as of. 
        Data Table is a table contains the claim data of each classes. It column headers are:
        [1st column]: Benefit Type 
        [2nd column]: Class 
        [3rd column]: Benefit, which is the benefit code 
        [4th column]: Benefit Description, the name of the benefit 
        [5th column]: Number of claims 
        [6th column]: Number of claimants 
        [7th column]: Presented 
        [8th column]: Adjusted  
        [9th column]: Usage Ratio 

        Task:  
        1. Read the table in the pdf 
            a. The pdf is a multi-page table file grouped by ["benefit type", "class"]  
            b. ["Benefit"] = int and ["Benefit description"] = text  
            c. At the end of each (["benefit type", "class"] ) item, there is a Total row, for total row: 
                i. Leave ["Benefit Type","Benefit", "Benefit Description", "Number of claimants"] empty 
                ii. ["Class"] = f"{class}Total" 
            d. At the end of each benefit type section, there is a total row: 
                i. ["Benefit Type"] = f"{benefit type}Total"  
                ii. Leave ["Class", "Benefit", "Benefit Description", "Number of claimants", "Usage ratio"] empty  
            e. At the end of the table (ie. The last page), there is a grand total row: 
                i. ["Benefit Type"] = Grand Total   
                ii. Leave ["Class", "Benefit", "Benefit Description", "Number of claimants", "Usage ratio"] empty  
        2. Based on the description of the pdf, generate a markdown table output of the table for me: 
            a. table_headers = ["Benefit Type", "Class", "Benefit", "Benefit Description", "Number of Claim Lines", "Number of Claimants", "Presented",  "Adjusted", "Usage Ratio"] 
            b. For newline-separated values within cells, iterate over each line within those cells to generate individual rows 
        3. Then based on the master table markdown output, generate a csv text output: 
            a. A1 = "Shortfall Analysis by class" 
            b. A3 ="Customer Name: " B3= Customer name 
            c. A4 ="Contract Number:" B4 =Contract number  
            d. A5 ="Period:"      B5=start date  C5 =end date 
            e. A6 ="# data as of: " B6 = date as of 
            f. A7 = "# Confidential" 
            g. Skip 2 rows  
            h. A10: write the shortfall analysis using the markdown table output generated above, header included table_headers = ["Benefit Type", "Class", "Benefit", "Benefit Description", "Number of Claim Lines", "Number of Claimants", "Presented",  "Adjusted", "Usage Ratio"] 
            i. based on the number of columns starting from A10, refill the spacing by adding "," into the general information in Row 1 to Row 9 such that the csv is readable.
                - For example, A1 = "Shortfall Analysis by class", then Row 1 has to add 4 commas to the end of the row if the Data Table consists of 5 columns, so that the csv is readable.
                - "," padding in any empty cell in the row, so that the csv is readable. (For example, for SMM, there can be no data in Presented Amount, therefore, add "," padding in the Presented Amount column)
                - Row 2, 8, 9 add "," padding until there are 14 columns in the row

        4. Check the csv text to make sure that all the columns are correctly formatted and aligned. If the number of columns of each row are not the same, please adjust the padding, or reassess the value if they are placed at the right position.
        
    </text>

    <text data="BlueCross Usage" type="text">
        Role: Data Input Officer  
        Desired output: markdown table output which combines all the data tables in the pdf into a single master table. 

        PDF Page setting:In each page, you will see 3 section, Header, General Information and Data Table. 
        Header locates at the top center part of the pdf, which contains "Blue Cross (Asia-Pacific) Insurance LTD.", "Inpatient Claims Summary by Plan", "From to"General information consists of Policy Holder, Group Code, Policy period, agent. 
        Data Table is a table contains the claim data of each classes. It column headers are:
        [1st column]: Benefit Description 
        [2nd column]: No. Of Visits 
        [3rd column]: % of Total Visits 
        [4th column]: Claim Incurred 
        [5th column]: Claim paid 
        [6th column]: Usage % 
        [7th column]: Average Claim Paid (HK$) 
        Part of the data have 4 column, they do not have No. Of Visits, % of Total Visits and Average Claim Paid (HK$) 

        Task:  
        1. Read the table in the pdf 
            a. The pdf is a multi-page table file grouped by ["For level code"]  
            b. At the end of each level code table, there is a total row: 
            c. At the end of the table (ie. The last page), there is a grand total row: 
        2. Based on the description of the pdf, generate a markdown table output of the table for me: 
            a. table_headers = ["Benefit Description", "No. Of visits", "% of total visits" "Class", "Claims Incurred",  "Claim paid, "Usage%", "Average claim paid"] 
            b. For newline-separated values within cells, iterate over each line within those cells to generate individual row. 
        3. Then based on the markdown table output generate a completed csv text  
            a. Table header = ["Policy number", "Client name", "Start date", "End date", "Class" ,"Benefit Description", "Number of Claim Lines", "Presented",  "Adjusted", "Usage Ratio"].  
                i. The pdf should contain more than 1 policy holder with different policy number and agent, extract them from every page general information part 
                ii. Drop the "$" in presented and adjusted column 
        4. Check the csv text to make sure that all the columns are correctly formatted and aligned. If the number of columns of each row are not the same, please adjust the padding, or reassess the value if they are placed at the right position.
    </text>

    <text data="SunLife Usage" type="text">
        Role: Data Input Officer  

        Desired output: markdown table output which combines all the data tables in the pdf into a single master table. 

        PDF Page setting:In each page, you will see 3 section, Header, General Information, Data Table 
        Header locates at the top center part of the pdf, which contains "Medical Claim Experience", "(by Paid Date Basis)"General information consists of Insurance Company, Policy Code, Policy Owner, Period, Conversation. 
        Data Table is a table contains the claim data of each classes. It column headers are:
        [1st column]: Claim Experience 
        [2nd column]:Hospitalization 
        [3rd column]: Clinical 
        [4th column]: Pregnancy 
        [5th  column]: Major Medical  
        [6th column]: Total 

        Task:  
        Read the table in the pdf and transpose 
        1. rows = "Hospitalization", "Clinical", "Pregnancy", "Major Medical", "Total" 
        2. Columns = "accrued premium", "claims incurred", "claims paid", "Loss ratio", "Usage ratio" 
        3. Read the row "Total" from the data table, do not make up numbers  

        Then based on the transposed table, generate a mastered market table output with the following requirements:  
        1. table_headers = ["Policy Owner", "Policy code", "Policy Start Date", "Policy End date", "Panel" ,"Accrued premium", "Claims incurred", "Claims paid", "Loss ratio", "Usage ratio"] 
        2. Where ["Policy owner", "Policy code", "Policy Start Date", "Policy End date"] can be found in the general information section 
        3. For newline-separated values within cells, iterate over each line within those cells to generate individual row. 

        Then based on the markdown table output generate a completed .csv file:  

        Table_headers = ["Policy Owner", "Policy code", "Policy Start Date", "Policy End date", "Accrued premium", "Claims incurred", "Claims paid", "Loss ratio", "Usage ratio"] 
        
        Note: For the value contains ",", especially in the "benefit" and "client_name" columns, please replace it with space " " to avoid the csv format error.
    </text>

    <text data="April Usage" type="text">
        Role: Data Input Officer  

        Desired output: separated markdown output table for each page with all the data included 

        PDF settings: exclude the logo at the top, there are 2 main sections in each page of the pdf: general information and data table.  
        The general information contains: ["Policy holder", "Start date", "Reported to", "No. of days covered", "Currency", "Underwriting team", "Issue date of report" ] 
        The data table, the headings of the data table is mentioned above the table.  
        All the general information on the pdf for each page is the same while the format for the data table is each page is different.  
        Read and extract the data according to the table setting on each page.  
        Then based on the extracted content generate a markdown table: columns = [Policy Owner", "Policy code", "Policy Start Date", "Policy End date",] and the columns found in the data table of each page 2. Where ["Policy owner", "Policy code", "Policy Start Date", "Policy End date"] can be found in the general information section 
        
        Note: For the value contains ",", especially in the "benefit" and "client_name" columns, please replace it with space " " to avoid the csv format error.
    </text>

</prompt_library>